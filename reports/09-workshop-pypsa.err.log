Traceback (most recent call last):
  File "/home/runner/miniconda3/envs/esm-ws-24-25/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/miniconda3/envs/esm-ws-24-25/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/miniconda3/envs/esm-ws-24-25/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/miniconda3/envs/esm-ws-24-25/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/miniconda3/envs/esm-ws-24-25/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/miniconda3/envs/esm-ws-24-25/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/miniconda3/envs/esm-ws-24-25/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
n = pypsa.examples.scigrid_de(from_master=True)
------------------

----- stderr -----
INFO:pypsa.examples:Retrieving network data from https://github.com/PyPSA/PyPSA/raw/master/examples/scigrid-de/scigrid-with-load-gen-trafos.nc
------------------

[31m---------------------------------------------------------------------------[39m
[31mHTTPError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[55][39m[32m, line 1[39m
[32m----> [39m[32m1[39m n = [43mpypsa[49m[43m.[49m[43mexamples[49m[43m.[49m[43mscigrid_de[49m[43m([49m[43mfrom_master[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/site-packages/pypsa/examples.py:135[39m, in [36mscigrid_de[39m[34m(update, from_master)[39m
[32m    133[39m name = [33m"[39m[33mscigrid-de[39m[33m"[39m
[32m    134[39m repofile = [33m"[39m[33mexamples/scigrid-de/scigrid-with-load-gen-trafos.nc[39m[33m"[39m
[32m--> [39m[32m135[39m path = [43m_retrieve_if_not_local[49m[43m([49m
[32m    136[39m [43m    [49m[43mname[49m[43m,[49m[43m [49m[43mrepofile[49m[43m,[49m[43m [49m[43mupdate[49m[43m=[49m[43mupdate[49m[43m,[49m[43m [49m[43mfrom_master[49m[43m=[49m[43mfrom_master[49m
[32m    137[39m [43m[49m[43m)[49m
[32m    138[39m n = Network(path)
[32m    139[39m carriers = [38;5;28mlist[39m(
[32m    140[39m     {
[32m    141[39m         carrier
[32m   (...)[39m[32m    145[39m     }
[32m    146[39m )

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/site-packages/pypsa/examples.py:65[39m, in [36m_retrieve_if_not_local[39m[34m(name, repofile, update, from_master)[39m
[32m     63[39m     url = _repo_url(from_master) + repofile
[32m     64[39m     logger.info([33mf[39m[33m"[39m[33mRetrieving network data from [39m[38;5;132;01m{[39;00murl[38;5;132;01m}[39;00m[33m"[39m)
[32m---> [39m[32m65[39m     [43murlretrieve[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mpath[49m[43m)[49m
[32m     67[39m [38;5;28;01mreturn[39;00m [38;5;28mstr[39m(path)

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/urllib/request.py:240[39m, in [36murlretrieve[39m[34m(url, filename, reporthook, data)[39m
[32m    223[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    224[39m [33;03mRetrieve a URL into a temporary location on disk.[39;00m
[32m    225[39m 
[32m   (...)[39m[32m    236[39m [33;03mdata file as well as the resulting HTTPMessage object.[39;00m
[32m    237[39m [33;03m"""[39;00m
[32m    238[39m url_type, path = _splittype(url)
[32m--> [39m[32m240[39m [38;5;28;01mwith[39;00m contextlib.closing([43murlopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m)[49m) [38;5;28;01mas[39;00m fp:
[32m    241[39m     headers = fp.info()
[32m    243[39m     [38;5;66;03m# Just return the local path and the "headers" for file://[39;00m
[32m    244[39m     [38;5;66;03m# URLs. No sense in performing a copy unless requested.[39;00m

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/urllib/request.py:215[39m, in [36murlopen[39m[34m(url, data, timeout, cafile, capath, cadefault, context)[39m
[32m    213[39m [38;5;28;01melse[39;00m:
[32m    214[39m     opener = _opener
[32m--> [39m[32m215[39m [38;5;28;01mreturn[39;00m [43mopener[49m[43m.[49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/urllib/request.py:521[39m, in [36mOpenerDirector.open[39m[34m(self, fullurl, data, timeout)[39m
[32m    519[39m [38;5;28;01mfor[39;00m processor [38;5;129;01min[39;00m [38;5;28mself[39m.process_response.get(protocol, []):
[32m    520[39m     meth = [38;5;28mgetattr[39m(processor, meth_name)
[32m--> [39m[32m521[39m     response = [43mmeth[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mresponse[49m[43m)[49m
[32m    523[39m [38;5;28;01mreturn[39;00m response

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/urllib/request.py:630[39m, in [36mHTTPErrorProcessor.http_response[39m[34m(self, request, response)[39m
[32m    627[39m [38;5;66;03m# According to RFC 2616, "2xx" code indicates that the client's[39;00m
[32m    628[39m [38;5;66;03m# request was successfully received, understood, and accepted.[39;00m
[32m    629[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([32m200[39m <= code < [32m300[39m):
[32m--> [39m[32m630[39m     response = [38;5;28;43mself[39;49m[43m.[49m[43mparent[49m[43m.[49m[43merror[49m[43m([49m
[32m    631[39m [43m        [49m[33;43m'[39;49m[33;43mhttp[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcode[49m[43m,[49m[43m [49m[43mmsg[49m[43m,[49m[43m [49m[43mhdrs[49m[43m)[49m
[32m    633[39m [38;5;28;01mreturn[39;00m response

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/urllib/request.py:559[39m, in [36mOpenerDirector.error[39m[34m(self, proto, *args)[39m
[32m    557[39m [38;5;28;01mif[39;00m http_err:
[32m    558[39m     args = ([38;5;28mdict[39m, [33m'[39m[33mdefault[39m[33m'[39m, [33m'[39m[33mhttp_error_default[39m[33m'[39m) + orig_args
[32m--> [39m[32m559[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_call_chain[49m[43m([49m[43m*[49m[43margs[49m[43m)[49m

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/urllib/request.py:492[39m, in [36mOpenerDirector._call_chain[39m[34m(self, chain, kind, meth_name, *args)[39m
[32m    490[39m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[32m    491[39m     func = [38;5;28mgetattr[39m(handler, meth_name)
[32m--> [39m[32m492[39m     result = [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m)[49m
[32m    493[39m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    494[39m         [38;5;28;01mreturn[39;00m result

[36mFile [39m[32m~/miniconda3/envs/esm-ws-24-25/lib/python3.12/urllib/request.py:639[39m, in [36mHTTPDefaultErrorHandler.http_error_default[39m[34m(self, req, fp, code, msg, hdrs)[39m
[32m    638[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mhttp_error_default[39m([38;5;28mself[39m, req, fp, code, msg, hdrs):
[32m--> [39m[32m639[39m     [38;5;28;01mraise[39;00m HTTPError(req.full_url, code, msg, hdrs, fp)

[31mHTTPError[39m: HTTP Error 404: Not Found

